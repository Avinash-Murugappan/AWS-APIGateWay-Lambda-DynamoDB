{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/survey/survey.component.ts","webpack:///src/app/survey/survey.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ListComponent","http","list","get","subscribe","data","SurveyComponent","router","record","likedAboutCampus","httpOptions","headers","Object","filter","k","toString","console","log","post","alert","navigate","onSubmit","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAMC,MAAM,GAAW,CAAC;AAACC,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE;AAA5B,KAAD,EACvB;AAACD,UAAI,EAAE,MAAP;AAAeC,eAAS,EAAC;AAAzB,KADuB,CAAvB;;QAOaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACb7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaQ,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,IAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,8H;AAAA;AAAA;ACPzB;;AACE;;AACE;;AAAI;;AAAkD;;AAAW;;AAAI;;AACrE;;AAAI;;AAAgD;;AAAkB;;AAAI;;AAC5E;;AACF;;AACA;;;;;;;;;sEDCaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA2BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAPJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,kEALO,CAOI;;;;0HAGFA,S,EAAS;AAAA,uBAdlB,2DAckB,EAblB,wEAakB,EAZlB,kEAYkB;AAZL,kBAGb,uEAHa,EAIb,oEAJa,EAKb,qEALa,EAMb,0DANa,EAOb,kEAPa;AAYK,O;AALC,K;;;;;sEAKVA,S,EAAS;cAhBrB,sDAgBqB;eAhBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,kEAHY,CADN;AAMRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,EAKP,kEALO,CAND;AAaRQ,mBAAS,EAAE,EAbH;AAcRC,mBAAS,EAAE,CAAC,2DAAD;AAdH,S;AAgBY,Q;;;;;;;;;;;;;;;;;;AC3BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;AAAsB;;AAAU;;;;;;AAmB5B;;AACI;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAwB;;AAC5B;;AAAI;;AAAe;;AACnB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAc;;AAClB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAA2B;;AAC/B;;AAAI;;AAA2B;;AAC/B;;AAAI;;AAAqC;;AACzC;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAmB;;AACxB;;;;;;AAdK;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAhCZ;;AACI;;AACI;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAc;;AAClB;;AAAI;;AAAI;;AACR;;AAAI;;AAAK;;AACT;;AAAI;;AAAO;;AACX;;AAAI;;AAAY;;AAChB;;AAAI;;AAAK;;AACT;;AAAI;;AAAc;;AAClB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAA4B;;AAChC;;AAAI;;AAAM;;AACV;;AAAI;;AAAQ;;AAChB;;AAEA;;AAiBJ;;;;;;AAjBQ;;AAAA;;;;QDXKC,a;AAGX,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADpB,aAAAC,IAAA,GAAK,IAAL;AACyC;;;;mCAGjC;AAAA;;AACN,eAAKD,IAAL,CAAUE,GAAV,CAAmB,sDAAnB,EAA2EC,SAA3E,CAAqF,UAAAC,IAAI,EAAI;AAC7F,iBAAI,CAACH,IAAL,GAAYG,IAAZ;AACC,WAFD;AAGD;;;;;;;uBAVUL,a,EAAa,gI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,oD;AAAA;AAAA;ACR1B;;AACA;;;;AADG;;AACI;;AAAA;;;;;;;;;sEDOMA,a,EAAa;cALzB,uDAKyB;eALf;AACTP,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaW,e;AAMX,+BAAoBL,IAApB,EAA8CM,MAA9C,EAA8D;AAAA;;AAA1C,aAAAN,IAAA,GAAAA,IAAA;AAA0B,aAAAM,MAAA,GAAAA,MAAA;AAJ9C,aAAAC,MAAA,GAAa,EAAb;AACA,aAAAC,gBAAA,GAAuB,EAAvB;AASA,aAAAC,WAAA,GAAc;AACZC,iBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,4BAAgB;AAAlB,WAAhB;AADG,SAAd;AALE;;;;mCAEM,CACP;;;mCAMO;AAAA;;AACN,eAAKH,MAAL,CAAYC,gBAAZ,GAA+BG,MAAM,CAAC/B,IAAP,CAAY,KAAK4B,gBAAjB,EAAmCI,MAAnC,CAA0C,UAACC,CAAD;AAAA,mBAAW,MAAI,CAACL,gBAAL,CAAsBK,CAAtB,CAAX;AAAA,WAA1C,EAA+EC,QAA/E,EAA/B;AACAC,iBAAO,CAACC,GAAR,CAAY,KAAKT,MAAjB;AACA,eAAKP,IAAL,CAAUiB,IAAV,CAAoB,qDAApB,EAA0E,KAAKV,MAA/E,EAAsF,KAAKE,WAA3F,EAAwGN,SAAxG,CAAkH,UAAAC,IAAI,EAAE;AACxHc,iBAAK,CAAC,cAAD,CAAL;;AACE,kBAAI,CAACZ,MAAL,CAAYa,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,WAHD;AAID;;;;;;;uBAvBUd,e,EAAe,gI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,gB;AAAA,c;AAAA,yhF;AAAA;AAAA;ACP3B;;AAA4B;;AAAc;;AAC1C;;AAAM;AAAA,mBAAc,IAAAe,QAAA,EAAd;AAAwB,WAAxB;;AACJ;;AACE;;AACE;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAkE;AAAA;AAAA;;AAAlE;;AAAkG;;AACxG;;AACA;;AACE;;AAAI;;AAAS;;AACb;;AAAI;;AAAiE;AAAA;AAAA;;AAAjE;;AAAiG;;AACvG;;AACA;;AACE;;AAAI;;AAAc;;AAClB;;AAAI;;AAAsE;AAAA;AAAA;;AAAtE;;AAA2G;;AACjH;;AAEA;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAA6D;AAAA;AAAA;;AAA7D;;AAAyF;;AAC/F;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAA8D;AAAA;AAAA;;AAA9D;;AAA2F;;AACjG;;AACA;;AACE;;AAAI;;AAAG;;AACP;;AAAI;;AAA8D;AAAA;AAAA;;AAA9D;;AAAyF;;AAC/F;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAA6D;AAAA;AAAA;;AAA7D;;AAA0F;;AAChG;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAA8F;AAAA;AAAA;;AAA9F;;AAA2H;;AACjI;;AACA;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAA8F;AAAA;AAAA;;AAA9F;;AAAkI;;AACxI;;AACA;;AACE;;AAAI;;AAAkC;;AACtC;;AAAI;;AAAO;;AAAgE;AAAA;AAAA;;AAAhE;;AAA0G;;AAAQ;;AAAQ;;AACrI;;AAAO;;AAAgE;AAAA;AAAA;;AAAhE;;AAA0G;;AAAQ;;AAAQ;;AACjI;;AAAO;;AAA8D;AAAA;AAAA;;AAA9D;;AAAsG;;AAAM;;AAAQ;;AAC3H;;AAAO;;AAAkE;AAAA;AAAA;;AAAlE;;AAA8G;;AAAU;;AAAQ;;AACvI;;AAAO;;AAA6D;AAAA;AAAA;;AAA7D;;AAAoG;;AAAU;;AAAQ;;AAC7H;;AAAO;;AAA8D;AAAA;AAAA;;AAA9D;;AAAsG;;AAAM;;AAAQ;;AAC7H;;AACA;;AACE;;AAAI;;AAA4C;;AAChD;;AAAI;;AAAO;;AAA4D;AAAA;AAAA;;AAA5D;;AAAoG;;AAAO;;AAAQ;;AAC9H;;AAAO;;AAA+D;AAAA;AAAA;;AAA/D;;AAAsG;;AAAU;;AAAQ;;AAC/H;;AAAO;;AAA6D;AAAA;AAAA;;AAA7D;;AAAoG;;AAAQ;;AAAQ;;AAC3H;;AAAO;;AAA0D;AAAA;AAAA;;AAA1D;;AAAiG;;AAAK;;AAAQ;;AACvH;;AACA;;AACE;;AAAI;;AAA4E;;AAChF;;AAAI;;AAA0C;AAAA;AAAA;;AAC1C;;AAA4B;;AAAW;;AACvC;;AAAQ;;AAAM;;AACd;;AAAQ;;AAAQ;;AACpB;;AAAS;;AACX;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AAAI;;AAAkH;AAAA;AAAA;;AAAlH;;AAAgJ;;AACtJ;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAwD;AAAA;AAAA;;AAA8B;;AAAW;;AACvG;;AACA;;AACE;;AACC;;AAAkE;;AAAM;;AACzE;;AAAoC;;AACpC;;AACJ;;AACF;;AACF;;;;AA1E8E;;AAAA;;AAID;;AAAA;;AAIK;;AAAA;;AAKT;;AAAA;;AAIC;;AAAA;;AAIA;;AAAA;;AAID;;AAAA;;AAIiC;;AAAA;;AAIA;;AAAA;;AAIvB;;AAAA;;AACJ;;AAAA;;AACF;;AAAA;;AACI;;AAAA;;AACL;;AAAA;;AACC;;AAAA;;AAIE;;AAAA;;AACD;;AAAA;;AACF;;AAAA;;AACH;;AAAA;;AAInB;;AAAA;;AAQwE;;AAAA;;AAI1D;;AAAA;;;;;;;;;sEDhExDf,e,EAAe;cAL3B,uDAK2B;eALjB;AACTb,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM2B,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SurveyComponent } from './survey/survey.component';\nimport { ListComponent} from './list/list.component';\n\n\nconst routes: Routes = [{path: 'survey', component: SurveyComponent},\n{path: 'list', component:ListComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ui';\n}\n","<nav>\n  <ul>\n    <li><a routerLink=\"/survey\" routerLinkActive=\"active\">Survey Page</a></li>\n    <li><a routerLink=\"/list\" routerLinkActive=\"active\">Get Survey Records</a></li>\n  </ul>\n</nav>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SurveyComponent } from './survey/survey.component';\nimport { ListComponent } from './list/list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SurveyComponent,\n    ListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  list=null;\n  constructor(private http: HttpClient) { }\n\n\n  ngOnInit(): void {\n    this.http.get<any>('http://34.229.53.170:8081/rest/webapi/api/getRecords').subscribe(data => {\n    this.list = data;\n    })\n  }\n}","<p *ngIf=\"list==null\">Loading...</p>\n<table *ngIf=\"list!=null\">\n    <tr>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Street Address</th>\n        <th>City</th>\n        <th>State</th>\n        <th>Zipcode</th>\n        <th>Phone number</th>\n        <th>Email</th>\n        <th>Date of Survey</th>\n        <th>Liked about Campus</th>\n        <th>Origin of Interest</th>\n        <th>Likelyhood of Recommendation</th>\n        <th>Raffle</th>\n        <th>Comments</th>\n    </tr>\n\n    <tr *ngFor=\"let index of list\">\n        <td>{{index?.firstname}}</td>\n        <td>{{index?.lastname}}</td>\n        <td>{{index?.streetAddress}}</td>\n        <td>{{index?.city}}</td>\n        <td>{{index?.state}}</td>\n        <td>{{index?.zip}}</td>\n        <td>{{index?.phone}}</td>\n        <td>{{index?.email}}</td>\n        <td>{{index?.dateOfSurvey}}</td>\n        <td>{{index?.likedAboutCampus}}</td>\n        <td>{{index?.originOfInterest}}</td>\n        <td>{{index?.likelyhoodOfRecommendation}}</td>\n        <td>{{index?.raffle}}</td>\n        <td>{{index?.comments}}</td>\n       </tr>\n       \n</table>","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-survey',\n  templateUrl: './survey.component.html',\n  styleUrls: ['./survey.component.css']\n})\nexport class SurveyComponent implements OnInit {\n\n  record:any = {}\n  likedAboutCampus:any = {}\n  a:any\n\n  constructor(private http: HttpClient, private router: Router) {\n   }\n\n  ngOnInit(): void {\n  }\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  onSubmit(){\n    this.record.likedAboutCampus = Object.keys(this.likedAboutCampus).filter((k:any) => this.likedAboutCampus[k]).toString();\n    console.log(this.record);\n    this.http.post<any>(\"http://34.229.53.170:8081/rest/webapi/api/putRecord\",this.record,this.httpOptions).subscribe(data=>{\n    alert(\"Record added\");\n      this.router.navigate(['/list']);\n    });\n  }\n\n}","\n\n <h1 class=\"feedbackheading\">Student survey</h1>\n <form (ngSubmit) = \"onSubmit()\" #studentForm=\"ngForm\">\n   <table width=\"80%\">\n     <tbody>\n       <tr>\n         <th>First Name</th>\n         <td><input type=\"text\" name=\"firstname\" style=\"width: 100%;\" required [(ngModel)]=\"record.firstname\"/></td>\n       </tr>\n       <tr>\n         <th>Last Name</th>\n         <td><input type=\"text\" name=\"lastname\" style=\"width: 100%;\" required [(ngModel)]=\"record.lastname\" /></td>\n       </tr>\n       <tr>\n         <th>Street Address</th>\n         <td><input type=\"text\" name=\"streetAddress\" style=\"width: 100%;\" required [(ngModel)]=\"record.streetAddress\" /></td>\n       </tr>\n\n       <tr>\n         <th>City</th>\n         <td><input type=\"text\" name=\"city\" style=\"width: 100%;\" required [(ngModel)]=\"record.city\" /></td>\n       </tr>\n       <tr>\n         <th>State</th>\n         <td><input type=\"text\" name=\"state\" style=\"width: 100%;\" required [(ngModel)]=\"record.state\" /></td>\n       </tr>\n       <tr>\n         <th>Zip</th>\n         <td><input type=\"number\" name=\"zip\" style=\"width: 100%;\" required [(ngModel)]=\"record.zip\" /></td>\n       </tr>\n       <tr>\n         <th>Phone</th>\n         <td><input type=\"tel\" name=\"phone\" style=\"width: 100%;\" required [(ngModel)]=\"record.phone\" /></td>\n       </tr>\n       <tr>\n         <th>Email</th>\n         <td><input type=\"email\" name=\"email\" style=\"width: 100%;\" placeholder=\"aarunach@gmu.edu\" required [(ngModel)]=\"record.email\" /></td>\n       </tr>\n       <tr>\n         <th>Date</th>\n         <td><input type=\"date\" name=\"dateOfSurvey\" style=\"width: 100%;\" placeholder=\"mm/dd/yyyy\" required [(ngModel)]=\"record.dateOfSurvey\" /></td>\n       </tr>\n       <tr>\n         <th>What do you like about the campus?</th>\n         <td><label><input name=\"likedAboutCampus\" type=\"checkbox\" value=\"students\" [(ngModel)]=\"likedAboutCampus.students\" />Students</label><br/>\n         <label><input name=\"likedAboutCampus\" type=\"checkbox\" value=\"location\" [(ngModel)]=\"likedAboutCampus.location\" />Location</label><br/>\n         <label><input name=\"likedAboutCampus\" type=\"checkbox\" value=\"campus\" [(ngModel)]=\"likedAboutCampus.campus\" />Campus</label><br/> \n         <label><input name=\"likedAboutCampus\" type=\"checkbox\" value=\"atmosphere\" [(ngModel)]=\"likedAboutCampus.atmosphere\" />Atmosphere</label><br/>\n         <label><input name=\"likedAboutCampus\" type=\"checkbox\" value=\"rooms\" [(ngModel)]=\"likedAboutCampus.rooms\" />Dorm rooms</label><br/>\n         <label><input name=\"likedAboutCampus\" type=\"checkbox\" value=\"sports\" [(ngModel)]=\"likedAboutCampus.sports\" />Sports</label></td>\n       </tr>\n       <tr>\n         <th>What made you interested in this university?</th>\n         <td><label><input name=\"originOfInterest\" type=\"radio\" value=\"friends\" [(ngModel)]=\"record.originOfInterest\" />Friends</label><br/>\n         <label><input name=\"originOfInterest\" type=\"radio\" value=\"television\" [(ngModel)]=\"record.originOfInterest\"/>Television</label><br/>\n         <label><input name=\"originOfInterest\" type=\"radio\" value=\"internet\" [(ngModel)]=\"record.originOfInterest\"/>Internet</label><br />\n         <label><input name=\"originOfInterest\" type=\"radio\" value=\"other\" [(ngModel)]=\"record.originOfInterest\"/>Other</label></td>\n       </tr>\n       <tr>\n         <th>How likely that you recommend this university to other prospective students?</th>\n         <td><select name=\"likelyhoodOfRecommendation\" [(ngModel)]=\"record.likelyhoodOfRecommendation\">\n             <option selected=\"selected\">Very Likely</option>\n             <option>Likely</option>\n             <option>Unlikely</option>\n         </select></td>\n       </tr>\n       <tr>\n         <th>Raffle</th>\n         <td><input type=\"text\" name=\"raffle\" placeholder=\"Enter atleast 10 numbers seperated with comma\" style=\"width: 100%;\" [(ngModel)]=\"record.raffle\" /></td>\n       </tr>\n       <tr>\n         <th>Comments</th>\n         <td><textarea name=\"comments\" rows=\"4\" style=\"width: 100%;\" [(ngModel)]=\"record.comments\"></textarea></td>\n       </tr>\n       <tr >\n         <td colspan=2 style=\"text-align: center;\">\n          <button type=\"submit\" class=\"btn btn-default\" style=\"margin:5px;\">Submit</button>\n         <input type=\"reset\" value=\"reset\" /></td>\n         </tr>\n     </tbody>\n   </table>\n </form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}